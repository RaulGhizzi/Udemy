setwd("~/Git/Udemy/Machine_Learning")
dataset = read.csv("Data.csv")
View(dataset)
View(dataset)
#Getting Data Set
dataset$Age = ifelse(is.na(dataset$Age),
ave(dataset$Age, FUN = function(x) mean(x, na.rn = TRUE)),
dataset$Age)
View(dataset)
View(dataset)
dataset$Age = ifelse(is.na(dataset$Age),
ave(dataset$Age, FUN = function(x) mean(x, na.rn = TRUE)),
dataset$Age)
View(dataset)
View(dataset)
#Getting Data Set
dataset$Age = ifelse(is.na(dataset$Age),
ave(dataset$Age, FUN = function(x) mean(x, na.rm = TRUE)),
dataset$Age)
View(dataset)
View(dataset)
dataset$Salary = ifelse(is.na(dataset$Salary),
ave(dataset$Salary, FUN = function(x) mean(x, na.rm = TRUE)),
dataset$Salary)
View(dataset)
View(dataset)
View(dataset)
View(dataset)
#Encoding Categorical
dataset$Country = factor(dataset$Country,
levels = c('France', 'Spain', 'Germany'),
labels = c(1, 2, 3))
View(dataset)
View(dataset)
dataset$Purchased = factor(dataset$Purchased,
levels = c('No', 'Yes'),
labels = c(0, 1))
View(dataset)
View(dataset)
install.packages('caTools')
library(caTools)
split = sample.split(dataset$Purchased, SplitRatio = 0.8)
split
set.seed(123)
split = sample.split(dataset$Purchased, SplitRatio = 0.8)
training_set = subset(dataset, split == TRUE)
test_set = subset(dataset, split == FALSE)
split
View(test_set)
View(test_set)
View(training_set)
View(training_set)
training_set = scale(training_set)
test_set = scale(test_set)
training_set[, 2:3] = scale(training_set[, 2:3])
test_set[, 2:3] = scale(test_set[, 2:3])
View(training_set)
View(training_set)
View(test_set)
View(test_set)
setwd("~/Git/Udemy/Machine_Learning")
dataset = read.csv("Salary_Data.csv")
View(dataset)
View(dataset)
View(dataset)
View(dataset)
library(caTools)
set.seed(123)
split = sample.split(dataset$Salary, SplitRatio = 2/3)
training_set = subset(dataset, split == TRUE)
test_set = subset(dataset, split == FALSE)
View(training_set)
View(training_set)
regressor = lm(formula = Salary ~ YearsExperience,
data = training_set)
sumary(regressor)
summary(regressor)
regressor = lm(formula = Salary ~ YearsExperience,
data = training_set)
y_pred = predict(regressor, newdata = test_set)
y_pred
install.packages('ggplot2')
library(ggplot2)
library(ggplot2)
ggplot() +
geom_point(aes(x = training_set$YearsExperience, y = training_set$Salary),
colour = 'red') +
goem_line(aes(x = training_set$YearsExperience, y = predict(regressor, newdata = training_set)),
colour = 'yellow') +
ggtitle('Salary vs Experience (Training set)') +
xlab('Years of experience') +
ylab('Salary')
ggplot() +
geom_point(aes(x = training_set$YearsExperience, y = training_set$Salary),
colour = 'red') +
geom_line(aes(x = training_set$YearsExperience, y = predict(regressor, newdata = training_set)),
colour = 'yellow') +
ggtitle('Salary vs Experience (Training set)') +
xlab('Years of experience') +
ylab('Salary')
ggplot() +
geom_point(aes(x = test_set$YearsExperience, y = test_set$Salary),
colour = 'red') +
geom_line(aes(x = training_set$YearsExperience, y = predict(regressor, newdata = training_set)),
colour = 'yellow') +
ggtitle('Salary vs Experience (Training set)') +
xlab('Years of experience') +
ylab('Salary')
source('~/Git/Udemy/Machine_Learning/Multiple_Linear_Regression.R')
